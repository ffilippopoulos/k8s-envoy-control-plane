apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: grpc-client
  namespace: sys-foo
spec:
  secretName: grpc-client-tls
  issuerRef:
    name: ca-issuer
    kind: Issuer
  dnsNames:
  - cluster.aws.io/grpc-client
---
apiVersion: egresslistener.envoy.uw.systems/v1alpha1
kind: EgressListener
metadata:
  name: grpc-client
  namespace: sys-foo
spec:
  nodename: grpc-client
  listenport: 8090
  target:
    cluster: grpc-server
    port: 8091
  lbpolicy: "http"
  tls:
    secret: grpc-client-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grpc-client
  name: grpc-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpc-client
  template:
    metadata:
      annotations:
        cluster-name.envoy.uw.io: grpc-client
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/stats/prometheus'
        prometheus.io/port: '9901'
      labels:
        app: grpc-client
    spec:
      containers:
      - image: quay.io/jakekeeys/grpc-lb-test:latest
        name: grpc-client
        args:
        - client
        env:
        - name: HTTP_BIND
          value: :8080
        - name: GRPC_SERVER
          value: 127.0.0.1:8090
        - name: INTERVAL_MS
          value: "1000"
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 50Mi
          requests:
            memory: 25Mi
      - image: envoyproxy/envoy-alpine:v1.10.0
        name: envoy
        args:
        - -c /etc/envoy/envoy.yaml
        - -l debug
        - --service-node grpc-client
        - --service-cluster grpc-client
        volumeMounts:
        - name: envoy
          mountPath: "/etc/envoy"
      volumes:
      - name: envoy
        configMap:
          name: envoy-cp-server-config
